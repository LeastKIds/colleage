6. Express 웹서버 만들기
6.1 Express 프로젝트 만들기

1) express generator 사용
2) 직접 구현하기

* express 프로젝트 시작하기
1) npm init ==> package.json
2) express 패키지 설치
    npm i express
3) nodemon 명령어 설치
    node.exe monitor라고 생각하면 됨. 수정시 서버의 재시작 자동화
    npm -i -D nodemon
4) app.js 작성
5) npm start 서버 실행
6) http://localhost:3000/ 접속 테스트

7) 폴더 작성
views, models, routes
MVC 모델

6.2 자주 사용되는 미들웨어
    * Middeleware : 요청과 응답 사이의 어떤 처리를 하는 것
    * 사용자 정의 미들웨어 작성
    233p

    * 다양한 미들웨어가 있음
    1) 미들웨어 패키지 설치
    npm i morgan cokkie-parser express-session

    2) 도구 패키지 설치
    npm i dotenv : process.env 관리

6.2.1 morgan
log 처리 관련

GET                     /                   500             7.408ms -   50
요청 메소드             요청 주소   

6.3  Router객체로 라우팅 분리하기
app.js가 서비스가 많아짐에 따라
길어진다. ---> router로 분리처리하도록 한다.

- router는 미들웨어의 종류중 하나

- app.js에서 app.get(), app.post() --> 라우터 메소드
1) routes/index.js
2) routes/user.js

* app.js에 라우터 설정
252p 참고

* 라우터 실행 중에 next('route')
 : 한 url에 설정된 다른 라우터를 스킵

 * 사용자로부터 주소를 요청 정보 전달
  : 정규 표현식 (Reqular Expression)
  - /user/:id -- /user/123
    --> req.params.id --- 123값을 가짐
    - user/:name
        --> req.params.name
    - /user/:id?key1=val1&key2=val2
        --> req.params.id : 123
            req.query => {key1:val1, key2:val2}
    - /user/xxx 라우터보다 뒤에 작성해야 함

    - 동일 url에 메소드 다른 경우
    router.route('/abc')
    .get((req,res) => {
        res.send('Get /abc');
    })
    .post((req,res) =>{
        res.send('POST /abc');
    })
    .patch()
    .delete()


6.5.2 넌적스(Numjucks) : 파이어폭스를
작성한 모질라 재단
html 문법을 기반


6.5.2.4 include
: 포함하다
* include 파일 경로

6.5.2.5 extends 와 block
extends : 확장하다
block : for { } : for문 블록

레이아웃 파일 정의하고