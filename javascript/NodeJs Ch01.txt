1. 노드 시작하기

자바스크립트 이해 : https://ko.javasript.info/

1.1 핵심 개념 이해하기
NodeJs 정의 : 
    크롬 vs 자바스크립트 엔진으로 빌드 된 자바스크립트 런타임
    Runtime - 실행 시간으로써의 환경
    자바스크립트의 실행 환경
    NodeJs 만든이 : Ryan Lienhart Dahl

    자바로 비유하면 JVM, .NET프레임워크

1.1.1 서버(Serve) : 
서버 : 네트워크를 통해 클라이언트에 
    정보나 서비스를 제공하는 컴퓨터 또는 프로그램

클라이언트(Client) : 
    사용자 PC, 모바일 기기, IOT 장비
    서버에 서비스를 요청하는 컴퓨터나 프로그램
    웹브라우저
    

클라이언트(client)는 서버(serve)에게 요청(request)한다.
Serve는 Req 받으면 DataBase로 부터 Data를 가져온다.
Data를 가져오면 Serve는 Client에게 응답(Response)한다.
Client 부분을 Front-End
Serve 부분을 Back-End


NodeJs,React, view,앵골라 등 여러 언어가 있다.

1.1.2 자바스크립트 런타임 : 
    자바스크립트 실행 환경, 실행기
    libuv : 논 블록킹 I/O, 이벤트 기반 처리
    v8 : 자바스크립트 엔진(해석기)

# 노드의 특징
이벤트 기반
논 블로킹 I/O
싱글 스레드


1.1.3 이벤트 기반
Event-driven

1) Event : 클릭. 키보드 입력, 화면 변화 등
    컴퓨터에서 발생되는 시스템의 변화
    Event - Event Listener
            CallBack --> 함수로 구현, 콜백함수
            
* 이벤트 루프(Event Loop)

* 호출 스택(call stack)
    stack - LIFO (Last In First Qut)
    queue - FIFO (First Int First Qut)

* Global Context
<-> Local Context
Context : 함수 실행시 사용가능한 환경 (메모리 정보, 변수)

*setTimeout -> 콜백 이해
밀리 초 후에 등록한 함수(콜백함수)를 실행시킴

- 이벤트 루프 : 이벤트 발생시 호출 할 콜백함수들을 관리
                콜백함수의 실행 순서를 결정
- 백그라운드 : 타이머, 이벤트 리스너가 대기
                여러 작업이 동시에 실행될 수 있음
- 태스크 큐 : 이벤트 발생 후, 백그라운드에서 태스크큐로 타이머나
                이벤트 리스너를 전송, 큐의 순서대로 실행